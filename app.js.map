{"mappings":";;;;;;;;;AAAA,kBAAkB;ACAlB,kBAAkB;AAEX,MAAM,4CAAQ,OAAO,OAAO;IAC/B,IAAI;QACA,MAAM,MAAM,MAAM,CAAA,GAAA,sCAAI,EAAE,IAAI,CACxB,4CACA;mBACI;sBACA;QACJ,GACA;YACI,iBAAiB;QACrB;QAGJ,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,WACpB,OAAO,UAAU,CAAC;YACd,SAAS,MAAM,CAAC;QACpB,GAAG;IAEX,EAAE,OAAO,OAAO;QACZ,MAAM,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;IACrC;AACJ;;;ACvBA,kBAAkB;;AAIX,MAAM,4CAAa,CAAC,WAAW;IAClC,MAAM,MAAM,CAAA,GAAA,wCAAA,EAAE,GAAG,CAAC,OAAO;QACrB,QAAQ;YAAC,cAAc,WAAW,CAAC,EAAE;YAAE,cAAc,WAAW,CAAC,EAAE;SAAC;QAEpE,iBAAiB;QACjB,aAAa;IACjB;IAEA,CAAA,GAAA,wCAAA,EAAE,SAAS,CACP,CAAC,gIAAgI,CAAC,EAClI;QACI,aACI;QACJ,SAAS;QACT,SAAS;IACb,GACF,KAAK,CAAC;IAER,MAAM,kBAAkB,UAAU,GAAG,CAAC,CAAC;QACnC,MAAM,SAAS,CAAA,GAAA,wCAAA,EAAE,MAAM,CAAC;YACpB,SAAS,WAAW,CAAC,EAAE;YACvB,SAAS,WAAW,CAAC,EAAE;SAC1B,EAAE,KAAK,CAAC;QACT,6EAA6E;QAC7E,8EAA8E;QAC9E,eAAe;QACf,gEAAgE;QAChE,8BAA8B;QAC9B,8BAA8B;QAC9B,wBAAwB;QACxB,MAAM;QACN,2BAA2B;QAC3B,sBAAsB;QAEtB,CAAA,GAAA,wCAAA,EAAE,KAAK,CAAC;YACJ,WAAW;YACX,cAAc;YACd,QAAQ;gBAAC;gBAAG;aAAI;YAChB,WAAW;QACf,GACK,SAAS,CAAC;YAAC,SAAS,WAAW,CAAC,EAAE;YAAE,SAAS,WAAW,CAAC,EAAE;SAAC,EAC5D,UAAU,CACP,CAAC,QAAQ,EAAE,SAAS,GAAG,CAAC,CAAC,EAAE,SAAS,WAAW,IAAI,mBAAmB,IAAI,CAAC,EAE9E,MAAM,CAAC;QAEZ,OAAO;YAAC,SAAS,WAAW,CAAC,EAAE;YAAE,SAAS,WAAW,CAAC,EAAE;SAAC,EAAE,oCAAoC;IACnG;IAEA,2CAA2C;IAC3C,MAAM,SAAS,CAAA,GAAA,wCAAA,EAAE,YAAY,CAAC;IAC9B,IAAI,SAAS,CAAC,QAAQ;QAClB,gBAAgB;YAAC;YAAK;SAAG;QACzB,oBAAoB;YAAC;YAAI;SAAG;IAChC;IAEA,IAAI,gBAAgB,MAAM,KAAK,GAC3B,IAAI,OAAO,CAAC,KAAK,mCAAmC;SACjD;QACH,gEAAgE;QAChE,MAAM,cAAc,IAAI,OAAO;QAC/B,IAAI,OAAO,CAAC,cAAc;IAC9B;AACJ;;;AF9DA,MAAM,gCAAU,SAAS,cAAc,CAAC;AACxC,MAAM,kCAAY,SAAS,aAAa,CAAC;AACzC,IAAI,+BAAS;IACT,MAAM,aAAY,KAAK,KAAK,CAAC,8BAAQ,OAAO,CAAC,SAAS;IACtD,MAAM,iBAAgB,KAAK,KAAK,CAAC,8BAAQ,OAAO,CAAC,aAAa;AAClE;AAEA,CAAA,GAAA,yCAAS,EAAE,WAAW;AAEtB,IAAI,iCACA,gCAAU,gBAAgB,CAAC,UAAU,CAAC;IAClC,EAAE,cAAc;IAChB,MAAM,QAAQ,SAAS,cAAc,CAAC,SAAS,KAAK;IACpD,MAAM,WAAW,SAAS,cAAc,CAAC,YAAY,KAAK;IAC1D,CAAA,GAAA,yCAAI,EAAE,OAAO;AACjB","sources":["public/js/index.js","public/js/login.js","public/js/leaflet.js"],"sourcesContent":["/* eslint-disable */\nimport 'polyfill';\nimport { login } from './login';\nimport { displayMap } from './leaflet';\n\nconst leaflet = document.getElementById('map');\nconst formLogin = document.querySelector('.form');\nif (leaflet) {\n    const locations = JSON.parse(leaflet.dataset.locations);\n    const startLocation = JSON.parse(leaflet.dataset.startLocation);\n}\n\ndisplayMap(locations, startLocation);\n\nif (formLogin) {\n    formLogin.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const email = document.getElementById('email').value;\n        const password = document.getElementById('password').value;\n        login(email, password);\n    });\n}\n","/* eslint-disable */\nimport axios from 'axios';\nexport const login = async (email, password) => {\n    try {\n        const res = await axios.post(\n            'http://localhost:8080/api/v1/users/login',\n            {\n                email,\n                password,\n            },\n            {\n                withCredentials: true,\n            },\n        );\n\n        if (res.data.status === 'success') {\n            window.setTimeout(() => {\n                location.assign('/');\n            }, 1500);\n        }\n    } catch (error) {\n        alert(error.response.data.message);\n    }\n};\n","/* eslint-disable */\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nexport const displayMap = (locations, startLocation) => {\n    const map = L.map('map', {\n        center: [startLocation.coordinates[1], startLocation.coordinates[0]],\n\n        scrollWheelZoom: false,\n        zoomControl: false,\n    });\n\n    L.tileLayer(\n        `https://tile.jawg.io/jawg-light/{z}/{x}/{y}{r}.png?access-token=m0c1Ekaci63z92GS6xYURfC3gxOYripzlCft8qOkyXifb1VH3V0rBXiw9N0UqieJ`,\n        {\n            attribution:\n                '<a href=\"https://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n            minZoom: 0,\n            maxZoom: 22,\n        },\n    ).addTo(map);\n\n    const markerPositions = locations.map((location) => {\n        const marker = L.marker([\n            location.coordinates[1],\n            location.coordinates[0],\n        ]).addTo(map);\n        // marker.bindPopup({ content: location.description || 'No name provided' });\n        // const popup = L.popup([location.coordinates[1], location.coordinates[0]], {\n        //     content:\n        //         `<p class=\"map-popup\">${location.description}</p>` ||\n        //         'No name provided',\n        //     className: 'map-popup',\n        //     autoClose: false,\n        // });\n        // marker.bindPopup(popup);\n        // marker.openPopup();\n\n        L.popup({\n            autoClose: false, // This prevents automatic closing when clicking elsewhere\n            closeOnClick: false, // This prevents closing when clicking on the map,\n            offset: [0, -20],\n            className: 'map-popup',\n        })\n            .setLatLng([location.coordinates[1], location.coordinates[0]])\n            .setContent(\n                `<p>Day: ${location.day} ${location.description || 'No name provided'}</p>`,\n            )\n            .openOn(map);\n\n        return [location.coordinates[1], location.coordinates[0]]; // Return the position for fitBounds\n    });\n\n    // Fit the map to the bounds of the markers\n    const bounds = L.latLngBounds(markerPositions);\n    map.fitBounds(bounds, {\n        paddingTopLeft: [250, 50],\n        paddingBottomRight: [50, 50],\n    });\n\n    if (markerPositions.length === 1) {\n        map.setZoom(11); // Adjust this zoom level as needed\n    } else {\n        // For multiple locations, fit bounds and then zoom out slightly\n        const currentZoom = map.getZoom();\n        map.setZoom(currentZoom - 1);\n    }\n};\n"],"names":[],"version":3,"file":"app.js.map","sourceRoot":"/"}